<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>채팅방 목록</title>
    <style>
        /* 모달 스타일 */
        .modal {
            display: none; /* 초기에는 숨김 */
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }
        .modal-content {
            background-color: #fefefe;
            margin: 5% auto;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
            width: 80%;
            max-width: 500px;
        }
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }
        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
        #createRoomBtn {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            margin-bottom: 20px;
        }
        #createRoomBtn:hover {
            background-color: #0056b3;
        }
        #createRoomModal {
            text-align: center;
        }
        #createRoomForm {
            display: inline-block;
            text-align: left;
        }
        #createRoomForm label {
            display: block;
            margin-bottom: 10px;
        }
        #createRoomForm input[type="text"],
        #createRoomForm input[type="submit"] {
            width: 100%; /* 변경: 전체 너비로 설정 */
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box; /* 변경: 패딩과 보더 포함한 전체 크기로 설정 */
        }
        #createRoomForm input[type="submit"] {
            background-color: #007bff;
            color: white;
            border: none;
            cursor: pointer;
        }
        #createRoomForm input[type="submit"]:hover {
            background-color: #0056b3;
        }
        /* 채팅방 목록 스타일 */
        h1 {
            text-align: center;
            margin-bottom: 20px;
        }
        ul {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }
        li {
            margin-bottom: 10px;
            padding: 10px;
            background-color: #f9f9f9; /* 변경: 배경색 추가 */
            border-radius: 5px; /* 변경: 모서리를 둥글게 설정 */
        }
        a {
            text-decoration: none;
            color: #333;
            transition: color 0.3s ease;
        }
        a:hover {
            color: #007bff;
        }
        #logoutBtn {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 20px;
        }
        #logoutBtn:hover {
            background-color: #c82333;
        }
    </style>
</head>
<body>
    <h1>채팅방 목록</h1>
    <!-- 로그아웃 버튼 -->
    <button id="logoutBtn" onclick="logout()">로그아웃</button>
        <!-- 채팅방 만들기 버튼 -->
        <button id="createRoomBtn">채팅방 만들기</button>
    <ul>
        <% chatrooms.forEach(function(chatroom) { %>
            <li><a href="/chatroom/<%= chatroom.name %>"><%= chatroom.name %></a></li>
        <% }); %>
    </ul>



    <!-- 채팅방 만들기 모달 -->
    <div id="createRoomModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>채팅방 만들기</h2>
            <!-- 채팅방 생성 폼 -->
            <form id="createRoomForm">
                <label for="roomName">채팅방 이름:</label>
                <input type="text" id="roomName" name="roomName" required>
                <input type="submit" value="만들기">
            </form>
        </div>
    </div>

    <script>
        // 클라이언트 측에서 세션 정보 삭제
        function logout() {
            fetch('/signout', {
                method: 'GET',
                credentials: 'include' // 쿠키를 서버로 전송하기 위해 필요
            })
            .then(response => {
                if (response.ok) {
                    window.location.href = '/'; // 로그아웃 후 리다이렉트
                } else {
                    console.error('로그아웃 실패');
                }
            })
            .catch(error => {
                console.error('로그아웃 중 오류 발생:', error);
            });
        }
   

        // 모달 창 관련 코드
        var modal = document.getElementById("createRoomModal");
        var btn = document.getElementById("createRoomBtn");
        var span = document.getElementsByClassName("close")[0];

        btn.onclick = function() {
            modal.style.display = "block";
        }

        span.onclick = function() {
            modal.style.display = "none";
        }

        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }

        // 채팅방 만들기 폼 제출 처리
        var createRoomForm = document.getElementById("createRoomForm");
        createRoomForm.addEventListener("submit", function(event) {
            event.preventDefault(); // 폼 기본 동작 중지

            var roomName = document.getElementById("roomName").value;
            // 채팅방 생성 처리: Ajax 등을 이용하여 서버로 요청을 보내고 응답을 받은 후 처리
            fetch('/createRoom', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ roomName: roomName })
            })
            .then(response => response.text()) // 서버로부터의 텍스트 응답을 받음
            .then(data => {
                // 서버에서의 처리가 완료된 후에 alert를 실행
                if (data == "이미 같은 이름의 채팅방이 존재합니다.") {
                    // 채팅방이 성공적으로 생성된 경우에만 alert를 실행
                    alert(data);
                    // 페이지를 새로고침하여 채팅방 목록을 갱신
                    
                }else{
                    window.location.href = '/chatroom/' + roomName;
                }
            })
            .catch(error => {
                console.error('채팅방 생성 중 오류 발생:', error);
            });
        });



    </script>
</body>
</html>
